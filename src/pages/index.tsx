import { type NextPage } from "next";
import { useState } from "react";
import Head from "next/head";
import Link from "next/link";

import dayjs from "dayjs";
import isSameOrBefore from "dayjs/plugin/isSameOrBefore";
import duration from "dayjs/plugin/duration";
dayjs.extend(isSameOrBefore);
dayjs.extend(duration);

type Birthday = {
  day: number | string;
  month: number | string;
  year: number | string;
};

const Home: NextPage = () => {
  const [date, setDate] = useState<Birthday>({
    day: 0,
    month: 0,
    year: 0,
  });

  const [age, setAge] = useState({
    years: -1,
    months: -1,
    days: -1,
  });

  const handleSubmit = (e: React.FormEvent<HTMLInputElement>) => {
    e.preventDefault();
    const inputDate = dayjs(new Date(date.year, date.month - 1, date.day));
    const now = dayjs();
    if (inputDate.isSameOrBefore(now)) {
      const duration = dayjs.duration(now.diff(inputDate));
      const daysOld = duration.days();
      const yearsOld = duration.years();
      const monthsOld = duration.months();
      setAge({
        years: yearsOld,
        months: monthsOld,
        days: daysOld,
      });
    } else {
      console.log("invalid date");
    }
  };

  return (
    <>
      <Head>
        <title>Age Calculator App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-stone-200 text-stone-900">
        <div className="big-round rounded-t-md rounded-bl-md bg-white p-9 shadow-xl">
          <form>
            <div className="flex min-w-fit flex-row justify-between gap-3">
              <div className="mb-6">
                <label
                  className="mb-2 block text-sm font-medium text-gray-900"
                  htmlFor="day"
                >
                  Day
                </label>
                <input
                  type="number"
                  className="block w-32 rounded-lg border border-gray-300 bg-gray-50 p-4 text-gray-900 focus:border-blue-500 focus:ring-blue-500 sm:text-3xl"
                  max={31}
                  placeholder="DD"
                  value={date.day}
                  onChange={(e) => setDate({ ...date, day: e.target.value })}
                />
              </div>

              <div className="mb-6">
                <label
                  className="mb-2 block text-sm font-medium text-gray-900"
                  htmlFor="month"
                >
                  Month
                </label>
                <input
                  type="number"
                  max="12"
                  placeholder="MM"
                  value={date.month}
                  className="block w-32 rounded-lg border border-gray-300 bg-gray-50 p-4 text-gray-900 focus:border-blue-500 focus:ring-blue-500 sm:text-3xl"
                  onChange={(e) =>
                    setDate({ ...date, month: parseInt(e.target.value) })
                  }
                />
              </div>

              <div className="mb-6">
                <label
                  className="mb-2 block text-sm font-medium text-gray-900"
                  htmlFor="year"
                >
                  Year
                </label>
                <input
                  className="block w-32 rounded-lg border border-gray-300 bg-gray-50 p-4 text-gray-900 focus:border-blue-500 focus:ring-blue-500 sm:text-3xl"
                  type="number"
                  max="1990"
                  placeholder="YYYY"
                  value={date.year}
                  onChange={(e) =>
                    setDate({ ...date, year: parseInt(e.target.value) })
                  }
                />
              </div>
            </div>
            <div className="flex flex-row justify-end">
              <hr />
              <button
                className="rounded-full border border-amber-600 bg-amber-500 p-1 "
                onClick={handleSubmit}
              >
                Gonkulate
              </button>
            </div>

            <div className="flex flex-col">
              <p className="text-8xl">
                <span className="bg-gradient-to-r from-sky-400 to-emerald-600 bg-clip-text font-light text-transparent">
                  <em>{age.years < 0 ? "--" : age.years} </em>
                </span>
                years
              </p>
              <p className="text-8xl">
                <span className="bg-gradient-to-r from-sky-400 to-emerald-600 bg-clip-text font-light text-transparent">
                  <em>{age.months < 0 ? "--" : age.months} </em>
                </span>
                months
              </p>
              <p className="text-8xl">
                <span className="bg-gradient-to-r from-sky-400 to-emerald-600 bg-clip-text font-light text-transparent">
                  <em>{age.days < 0 ? "--" : age.days} </em>
                </span>
                days
              </p>
            </div>
          </form>
        </div>
      </main>
      <div className="attribution">
        Challenge by{" "}
        <Link
          href="https://www.frontendmentor.io?ref=challenge"
          target="_blank"
        >
          Frontend Mentor
        </Link>
        . Coded by <Link href="https://zackhanley.dev">Zack Hanley</Link>.
      </div>
    </>
  );
};

export default Home;
